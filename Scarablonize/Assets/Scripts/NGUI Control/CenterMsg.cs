using UnityEngine;using System.Collections;public class CenterMsg : MonoBehaviour{	public float WaitBringOutTime = 2f;	UILabel _msgLabel;	TweenColor _colorTweener;	Color _from;	Color _to;	ShowStatus _nowStatus;	bool _isWaitBringOut;	IEnumerator WaitToBringOut()	{		if (_isWaitBringOut)			yield break;		_isWaitBringOut = true;		yield return new WaitForSeconds(WaitBringOutTime);		BringOut();		_isWaitBringOut = false;	}	void BringIn()	{		StopAllCoroutines();		_isWaitBringOut = false;		_colorTweener.enabled = true;		_colorTweener.from = _from;		_colorTweener.to = _to;		_colorTweener.Reset();		_nowStatus = ShowStatus.BringIn;	}	void BringOut()	{		_colorTweener.enabled = true;		_colorTweener.from = _to;		_colorTweener.to = _from;		_colorTweener.Reset();		_nowStatus = ShowStatus.BringOut;	}	void FinishTween(UITweener tweener)	{		if (_nowStatus == ShowStatus.BringIn)			StartCoroutine(WaitToBringOut());		else if (_nowStatus == ShowStatus.BringOut)		{			_msgLabel.text = string.Empty;			_nowStatus = ShowStatus.Hide;		}	}	void Awake()	{		_colorTweener = GetComponent<TweenColor>();		_from = _colorTweener.from;		_to = _colorTweener.to;		_colorTweener.enabled = false;		_msgLabel = GetComponentInChildren<UILabel>();		_msgLabel.text = string.Empty;	}	// Use this for initialization	void Start ()	{	}		// Update is called once per frame	void Update ()	{		}	void OnDisable()	{		StopAllCoroutines();	}	public void ShowMsg(string msg)	{		_msgLabel.text = msg;		BringIn();	}#if UNITY_EDITOR	void OnGUI()	{		if (GUILayout.Button("msg"))			ShowMsg("The Rock");	}#endif}