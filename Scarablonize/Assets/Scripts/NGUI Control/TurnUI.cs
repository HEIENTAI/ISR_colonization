using UnityEngine;using System.Collections;public class TurnUI : MonoBehaviour{	public UILabel TurnText;	public float BringInForce = 10f;	public float WaitToBringOutTime = 2f;	enum ShowStatus	{		Hide,		BringIn,		BringOut	}	SpringPosition _spring;	ShowStatus _nowStatus;	bool _isWaitToBringOut;	IEnumerator WaitToBringOut()	{		if (_isWaitToBringOut)			yield break;		_isWaitToBringOut = true;		yield return new WaitForSeconds(WaitToBringOutTime);		BringOut();		_isWaitToBringOut = false;	}	Vector3 InitialPos	{		get		{			switch (GameControl.Instance.GameStatus)			{				case PlayStatus.RoundHumanTurn:					return new Vector3(700f, 0, 0);				default:					return new Vector3(-700f, 0, 0);			}		}	}	void BringIn()	{		gameObject.transform.localPosition = InitialPos;		_spring = SpringPosition.Begin(gameObject, Vector3.zero, BringInForce);		_spring.eventReceiver = gameObject;		_spring.callWhenFinished = "FinishSpring";		_nowStatus = ShowStatus.BringIn;	}	void BringOut()	{		_spring = SpringPosition.Begin(gameObject, InitialPos, BringInForce);		_spring.eventReceiver = gameObject;		_spring.callWhenFinished = "FinishSpring";		_nowStatus = ShowStatus.BringOut;	}	void FinishSpring(SpringPosition sp)	{		if (_nowStatus == ShowStatus.BringIn)			StartCoroutine(WaitToBringOut());		else if (_nowStatus == ShowStatus.BringOut)			_nowStatus = ShowStatus.Hide;	}	void Awake()	{	}	// Use this for initialization	void Start ()	{		TurnText.text = string.Empty;	}		// Update is called once per frame	void Update ()	{		}	void OnDisable()	{		StopAllCoroutines();	}	public void ShowTurn(PlayStatus status)	{		switch (status)		{			case PlayStatus.RoundScarabTurn:  //scarab turn				TurnText.text = "Scarab Turn !";				TurnText.color = Color.green;				break;			case PlayStatus.RoundHumanTurn:  //human turn				TurnText.text = "Human Turn !";				TurnText.color = Color.red;				break;			default:				break;		}		BringIn();	}}